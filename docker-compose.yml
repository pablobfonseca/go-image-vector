version: "3.8"

services:
  # API service
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "8080:8080"
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      - postgres
      - redis
    env_file: .env
    # Allow connecting to Ollama on host
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped

  # Worker service
  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      - postgres
      - redis
    env_file: .env
    # Allow connecting to Ollama on host
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped

  # Web client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.client
    ports:
      - "3000:3000"
    depends_on:
      - api
    environment:
      - API_BASE_URL=http://localhost:8080
    restart: unless-stopped

  # PostgreSQL database with pgvector extension
  postgres:
    image: pgvector/pgvector:pg17
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=image_vector
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  # Redis for task queue
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
